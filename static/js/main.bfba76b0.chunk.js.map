{"version":3,"sources":["redux/actions/contacts-actions.js","redux/reducers/contacts-reducer.js","redux/reducers/index.js","redux/store/store.js","components/SubTitle/SubTitle.styled.jsx","components/SubTitle/SubTitle.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","App.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","contactReducer","createReducer","state","some","alert","filter","contact","filterReducer","_","rootReducer","combineReducers","contacts","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","SectionTitle","Title","text","Form","Label","Input","AddButton","connect","dispatch","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","preventDefault","SubTitle","type","pattern","title","required","onChange","placeholder","ContactContainer","ContactItem","ContactButton","normalizedFilter","toLowerCase","includes","onDeleteContact","map","onClick","Wrapper","Container","children","LabelFilter","InputFilter","target","Section","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bfba76b0.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = createAction('contacts/Add', (name, number) => ({\n  payload: {\n    id: `id-${uuidv4()}`,\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction('contacts/Delete');\nexport const changeFilter = createAction('filter/Change');\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContact,\n  deleteContact,\n  changeFilter,\n} from '../actions/contacts-actions';\n\nconst initialContactState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport const contactReducer = createReducer(initialContactState, {\n  [addContact]: (state, { payload }) =>\n    state.some(\n      ({ name, number }) => name === payload.name && number === payload.number,\n    )\n      ? alert(`${payload.name} is already in contacts`)\n      : [...state, payload],\n\n  [deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nexport const filterReducer = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n","import { combineReducers } from 'redux';\nimport { contactReducer, filterReducer } from './contacts-reducer';\n\nexport const rootReducer = combineReducers({\n  contacts: contactReducer,\n  filter: filterReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport { rootReducer } from '../reducers';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import styled from '@emotion/styled/macro';\n\nexport const SectionTitle = styled.h3`\n  padding-bottom: 12px;\n  text-align: left;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionTitle } from './SubTitle.styled';\n\nconst Title = ({ text }) => {\n  return <SectionTitle>{text}</SectionTitle>;\n};\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import styled from '@emotion/styled/macro';\n\nexport const Form = styled.form`\n  margin-bottom: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n  max-width: 450px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  margin: 0 auto;\n  display: block;\n\n  & svg {\n    position: absolute;\n    top: 41px;\n    left: 5px;\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  width: 100%;\n  margin-bottom: 20px;\n  padding-left: 32px;\n  padding-right: 8px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  border-radius: 4px;\n  border: 2px solid #dadada;\n\n  font-size: 1.1rem;\n\n  &:focus {\n    outline: none;\n    border-color: #00b150;\n  }\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  margin: 0 auto;\n  padding: 10px;\n  background: linear-gradient(to top, #f1f1f1, #ffffff);\n  border: none;\n  border-radius: 4px;\n  font-size: 1.05rem;\n\n  &:active {\n    transform: scale(0.95);\n  }\n\n  & svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 12px;\n    color: #00b150;\n  }\n`;\n","import React, { useState } from 'react';\nimport SubTitle from 'components/SubTitle';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/actions/contacts-actions';\n\nimport { Form, Label, Input, AddButton } from './ContactForm.styled';\nimport { TiUserAdd, TiUser, TiPhone } from 'react-icons/ti';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <SubTitle text={'Name'} />\n        <TiUser />\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          placeholder=\"Name\"\n          value={name}\n        />\n      </Label>\n      <Label>\n        <SubTitle text={'Number'} />\n        <TiPhone />\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          placeholder=\"+xxx xx xxx-xx-xx\"\n          value={number}\n        />\n      </Label>\n\n      <AddButton type=\"submit\">\n        <TiUserAdd />\n        Add contact\n      </AddButton>\n    </Form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import styled from '@emotion/styled/macro';\n\nexport const ContactContainer = styled.ul`\n  width: 100%;\n  max-width: 450px;\n  margin: 0 auto;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border-radius: 3px;\n  color: black;\n  background-color: #fff;\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\n\n  font-size: 1.1rem;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ContactButton = styled.button`\n  display: flex;\n  align-content: center;\n  padding: 6px 10px;\n  background: linear-gradient(to top, #e0e0e0, #f2f2f2);\n  border: none;\n  border-radius: 4px;\n\n  &:active {\n    transform: scale(0.95);\n  }\n\n  & svg {\n    width: 16px;\n    height: 16px;\n    margin-right: 12px;\n    color: #ff1e1e;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/actions/contacts-actions';\nimport { MdRemoveCircle } from 'react-icons/md';\nimport {\n  ContactContainer,\n  ContactItem,\n  ContactButton,\n} from './ContactList.styled';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ContactContainer>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem key={id} name={name} number={number}>\n          <span>{name}:</span>\n          <span>{number}</span>\n          <ContactButton onClick={() => onDeleteContact(id)}>\n            <MdRemoveCircle />\n            Delete\n          </ContactButton>\n        </ContactItem>\n      ))}\n    </ContactContainer>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { filter, contacts } = state;\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n  return { contacts: visibleContacts };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContact(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import styled from '@emotion/styled/macro';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  background-color: #fff;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  border-radius: 3px;\n`;\n","import { Wrapper } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nexport default Container;\n","import styled from '@emotion/styled/macro';\n\nexport const LabelFilter = styled.label`\n  position: relative;\n  margin: 0 auto;\n  display: block;\n\n  & svg {\n    position: absolute;\n    top: 44px;\n    left: 141px;\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const InputFilter = styled.input`\n  height: 40px;\n  width: 300px;\n  margin-bottom: 20px;\n  padding-left: 38px;\n  padding-right: 8px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  border-radius: 4px;\n  border: 2px solid #dadada;\n\n  font-size: 1.1rem;\n\n  &:focus {\n    outline: none;\n    border-color: #0079b1;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport SubTitle from 'components/SubTitle';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/actions/contacts-actions';\n\nimport { LabelFilter, InputFilter } from './Filter.styled';\nimport { ImSearch } from 'react-icons/im';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <LabelFilter>\n      <SubTitle text={'Find Contacts by name'} />\n      <ImSearch />\n      <InputFilter type=\"text\" value={value} onChange={onChange} />\n    </LabelFilter>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import styled from '@emotion/styled/macro';\n\nexport const Wrapper = styled.section`\n  padding: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n","import { Wrapper } from './Section.styled';\n\nconst Section = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nexport default Section;\n","import styled from '@emotion/styled/macro';\n\nexport const SectionTitle = styled.h2`\n  padding-bottom: 20px;\n  font-size: 2rem;\n  font-weight: 600;\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionTitle } from './Title.styled';\n\nconst Title = ({ text }) => {\n  return <SectionTitle>{text}</SectionTitle>;\n};\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Container from 'components/Container';\nimport Filter from 'components/Filter';\nimport Section from 'components/Section';\nimport Title from 'components/Title';\n\nexport default function App() {\n  return (\n    <Section>\n      <Container>\n        <Title text=\"Phonebook\" />\n        <ContactForm />\n        <Title text=\"Contacts\" />\n        <Filter />\n        <ContactList />\n      </Container>\n    </Section>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}